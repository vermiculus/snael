%!PS-Adobe-2.0 EPSF-1.2
%%Pages: 1
%%DocumentFonts:
%%BoundingBox: 0 92 183 132%%HiResBoundingBox: 0.000000 92.735997 182.987994 131.381996%%EndComments

%%BeginProlog
%%BeginPreview: 183 39 8 195
% 000000000000000000000000000000000000538a8a45000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 000000000000000000000000000000000053c16e6ecf370000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 00000000000000000000000000000000006ea60e0053370000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 000000000000000000000000000000000029b3cfa67c0e0000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000002953b37c0000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 00000000000000000000000000000000007c9800008a8a0000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 000000000000000000000000000000000029b3cfcfc1290000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000292900000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 00000000000000000000000000001c394e77a6bbc3aa6d5739000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 00001c39395571718aaab2c7d4d4d4d4d4d3d4d1d4d4d4d4d4d4d4c9bab28c7e7139391c00000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% d4d4d4d4c7c5c9d4d4d4b2ab9fa6bfd48d551c00aa7f3971b2d4c9b7bbbdcdd4d4ced4d4d4d4b5a3
% 9b71715539390e000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% d4d4aa9b7171393900477fc6c68d550e0000000039d43900000e4771b8d4b87163436371a3aad4d4
% d4c7c5bdc7d4d4d4d49b9b8d71714739390000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 0e000000000e558dc6c67f470000000000000000007faa0000000000001c557fb8d4aa7139000000
% 393971719b9bd4d4d4b5b9a6acaeabc7d4d4d4c69b9b71717139392a000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 00001c558dd4b871390000000000000000000000000ec6630000000000000000002a638dc6d49b71
% 2a00000000000000393971719b9bd4d4d4aaaa8b99928c929b9bd4d4d4d4aa9b9b71716339391c00
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 63aad4aa712a0000000000000000000000000000000063c60e0000000000000000000000002a719b
% d4c68d632a000000000000000000000e394771719baad4d4d49b9b717e62626371719b9baad4d4d4
% d49b9b8d717155393900000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% aa631c0000000000000000000000000000000000000000aa7f000000000000000000000000000000
% 003971aad4b87f551c00000000000000000000000000000e394771719baad4d4d49b9b717139392a
% 39397171719b9bc6d4d4d4c69b9b7f717139392a0000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000039d4390000000000000000000000000000
% 000000000e4771b8d4b871470e0000000000000000000000000000000000000e3947717f9bb8d4d4
% d49b9b7163392a00000039394771718d9b9bd4d4d4d4b89b9b71716339391c000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000007faa0000000000000000000000000000
% 00000000000000001c557fb8d4aa713900000000000000000000000000000000000000000000001c
% 3955717f9bb8d4d4c69b8d7163392a00000000000e39395571719b9baad4d4d4d4aa9b8d71715539
% 390e0000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000ec66300000000000000000000000000
% 0000000000000000000000002a638dc6d49b712a0000000000000000000000000000000000000000
% 000000000000001c3955717f9bb8d4d4c69b8d7163392a00000000000000001c39397171719b9bb8
% d4d4d4c69b9b7f717147393900000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000063c60e000000000000000000000000
% 000000000000000000000000000000002a719bd4c68d632a00000000000000000000000000000000
% 0000000000000000000000000000002a3963718d9bc6d4d4b89b7f7155391c000000000000000000
% 000039394771717f9b9bc6d4d4d4b89b9b71717139391c0000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000aa7f000000000000000000000000
% 00000000000000000000000000000000000000003971aad4b87f551c000000000000000000000000
% 00000000000000000000000000000000000000000000002a3963718d9bc6d4d4b89b7f7155391c00
% 0000000000000000000000000e39395571718d9baad4d4d4d4aa9b9b71715539390e000000000000
% 0000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000039d4390000000000000000000000
% 00000000000000000000000000000000000000000000000e4771b8d4b871470e0000000000000000
% 000000000000000000000000000000000000000000000000000000000000002a3963719b9bd4d4d4
% b89b7f7147390e000000000000000000000000000000001c39396371719b9bb8d4d4d4d49b9b8d71
% 7147393900000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000007faa0000000000000000000000
% 0000000000000000000000000000000000000000000000000000001c557fb8d4aa71390000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000039
% 3971719b9bd4d4d4aa9b717147390e000000000000000000000000000000000000002a393971717f
% 9b9bc6d4d4d4c69b9b71717139392a0000000000000000
% 0000000000000000000000000000000000000000000000000000000ec65500000000000000000000
% 000000000000000000000000000000000000000000000000000000000000002a638dc6d49b1c0000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000393971719b9bd4d4d4aa9b55000000000000000000000000000000000000000000
% 000000000039395571718d9b9bd4d4d4d4aa9b9b390000
% 000000000000000000000000000000000000000000000000000000002a0000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000002a71000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000e39477139000000000000000000000000000000000000000000
% 0000000000000000000000000000001c39396371390000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000016575757370042575757571600
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000016575757570b00165757573700000000000000000000000000000000000000000000004d16
% 2c160000000000000000000000000000000000000000000000000042000000420016575757570b00
% 0000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000002c832c2c624d212c834d2c0b00
% 000000000000000000000000000000000000000000000000000000000000002c57002c5700000000
% 0000002c832c2c4d6d002c622c2c83210000000000000000000000000000000000000000002c5700
% 572c000000000000000000000000000000000000000000000000007800000078002c832c2c4d6d00
% 0000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000b6d576d0b0000002c7800000b8e0000782c000000
% 0000000000000000000000000000000000004257626d0b424278005762620b838e21838e670b004d
% 1600002c7800000078002c570000572c000000000000000000000000000000000000000000628e21
% 572c0b6262570062002c570042215762620b4242780000000000007800000078002c780000007800
% 0000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000373700572c0000002c78000000780000782c000000
% 0000000000000000000000000000000000005757004d57576d00424d004d4d2c57002c5742420083
% 0000002c8e57577837002c8e78788e000000000000000000000000000000000000000000002c5700
% 572c4d4d0057426221578e0078484d004d4d576d000000000000007800000078002c8e5757783700
% 0000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000b576d832c0000002c780000008e0000782c000000
% 000000000000000000000000000000000000572c00007857570062837883572c57002c570b6d3757
% 0000002c832c2c4d62002c5700004d4d0000000000000000000000000000000000000000002c5700
% 572c7816002c57374d6d572c7862837883575757000000000000007800000078002c832c2c4d6200
% 0000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000573700572c0000002c7800002c6d0000782c000000
% 0000000000000000000000000000000000005742002162575700573700162c2c57002c57006d6d16
% 0000002c7800000078002c57000037570000000000000000000000000000000000000000002c5700
% 572c57370037570083622c784d573700162c5757000000007800007878000078002c780000007800
% 0000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000004d6d5778570000002c997878780b0000782c000000
% 00000000000000000000000000000000000057835783215757001683577816217816217816428300
% 0000002c780000008e0b2c8e787883160000000000000000000000000000000000000000002c5700
% 572c1683578e16006d4200a4161683577816575700000000576d6d57576d6d57002c780000008e0b
% 000000000000000000000000000000002c780000002c78
% 00000000000000000000000000000000000000002116002100000000000000000000000000000000
% 000000000000000000000000000000000000572c210b0000000000002c000000210b00210b424200
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000002c000000000000000000002c000000000000000000161600001616000000000000000000
% 0000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000572c0000000000000000000000000000000042780b00
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000
%%EndImage
%%EndPreview
%%Page: 1 1 
%%BeginDocument: jgc.epi 
/InitDictCount countdictstack def gsave save mark newpath 
userdict /setpagedevice /pop load put 
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%Title: Window .95942736.95942896
%%CreationDate: Mon Apr 01 19:09:44 2013
%%BoundingBox: -190 -133 191 135
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica
%%+ font Helvetica-Bold
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/Euro/space/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
/circumflex/perthousand/Scaron/guilsinglleft/OE/space/Zcaron/space
/space/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
/tilde/trademark/scaron/guilsinglright/oe/space/zcaron/Ydieresis
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Helvetica
%%IncludeResource: font Helvetica-Bold
%%EndSetup

%%Page: 1 1
save
0.0 0.0 translate
1 1 scale
-190 -133 translate
0 267 moveto 380 267 lineto 380 0 lineto 0 0 lineto closepath clip newpath
gsave
/Helvetica-Bold findfont 9 scalefont ISOEncode setfont
0.000 0.251 0.502 setrgbcolor AdjustColor
210 260 [
[(S)]
] 15 -0.5 0.5 0 false DrawText
grestore
gsave
/Helvetica findfont 9 scalefont ISOEncode setfont
0.000 0.502 0.251 setrgbcolor AdjustColor
29 230 [
[(John NNP)]
] 15 -0.5 0.5 0 false DrawText
grestore
gsave
/Helvetica findfont 9 scalefont ISOEncode setfont
0.000 0.502 0.251 setrgbcolor AdjustColor
93 230 [
[(gave VBD)]
] 15 -0.5 0.5 0 false DrawText
grestore
gsave
/Helvetica findfont 9 scalefont ISOEncode setfont
0.000 0.502 0.251 setrgbcolor AdjustColor
162 230 [
[(Caitlyn NNP)]
] 15 -0.5 0.5 0 false DrawText
grestore
gsave
/Helvetica findfont 9 scalefont ISOEncode setfont
0.000 0.502 0.251 setrgbcolor AdjustColor
219 230 [
[(a DT)]
] 15 -0.5 0.5 0 false DrawText
grestore
gsave
/Helvetica findfont 9 scalefont ISOEncode setfont
0.000 0.502 0.251 setrgbcolor AdjustColor
267 230 [
[(pretty RB)]
] 15 -0.5 0.5 0 false DrawText
grestore
gsave
/Helvetica findfont 9 scalefont ISOEncode setfont
0.000 0.502 0.251 setrgbcolor AdjustColor
328 230 [
[(flower JJR)]
] 15 -0.5 0.5 0 false DrawText
grestore
gsave
/Helvetica findfont 9 scalefont ISOEncode setfont
0.000 0.502 0.251 setrgbcolor AdjustColor
370 230 [
[(. .)]
] 15 -0.5 0.5 0 false DrawText
grestore
gsave
210 252 moveto
29.5 237 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.251 0.251 setrgbcolor AdjustColor
stroke
grestore
gsave
210 252 moveto
93 237 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.251 0.251 setrgbcolor AdjustColor
stroke
grestore
gsave
210 252 moveto
162.5 237 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.251 0.251 setrgbcolor AdjustColor
stroke
grestore
gsave
210 252 moveto
219 237 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.251 0.251 setrgbcolor AdjustColor
stroke
grestore
gsave
210 252 moveto
267 237 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.251 0.251 setrgbcolor AdjustColor
stroke
grestore
gsave
210 252 moveto
328.5 237 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.251 0.251 setrgbcolor AdjustColor
stroke
grestore
gsave
210 252 moveto
370.5 237 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.251 0.251 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
%%EndDocument 
countdictstack InitDictCount sub { end } repeat 
cleartomark restore grestore 
